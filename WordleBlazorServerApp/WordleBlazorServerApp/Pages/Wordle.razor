@page "/wordle"

@using WorldleGameEngine
@using global::Shared

@inject IGameEngine gameEngine;

<h3>Wordle</h3>

Enter wordle: <br/>
<input type="text" @bind-value="@guess" /> <br/> <br/>

<button class="btn" type="button" @onclick="EnterGuess" >Enter</button><br /><br />

@if (gameState != null)
{
    @if (gameState.GuessResult.IncorrectGuessHints.LettersPresentInGuessButNotInCorrectPosition.Count > 0){
        <span>LettersPresentInGuessButNotInCorrectPosition: </span>
        <span>@string.Join(" ", gameState.GuessResult.IncorrectGuessHints.LettersPresentInGuessButNotInCorrectPosition)</span><br /><br />
    }

    @if (gameState.GuessResult.IncorrectGuessHints.LetterPositionsPresentInGuessAndInCorrectPosition.Count > 0){
        <span>LetterPositionsPresentInGuessAndInCorrectPosition: </span>
        <span>@string.Join(" ", gameState.GuessResult.IncorrectGuessHints.LetterPositionsPresentInGuessAndInCorrectPosition)</span><br /><br />
    }

    @if (gameState.GuessResult.IncorrectGuessHints.LetterPositionsNotPresentInGuess.Count > 0){
        <span>LetterPositionsNotPresentInGuess: </span>
        <span>@string.Join(" ", gameState.GuessResult.IncorrectGuessHints.LetterPositionsNotPresentInGuess)</span><br /><br />
    }

    @if(gameState.IsGameComplete)
    {
        <span>@gameState.GuessResult.ResultMessage</span>
    }
}

@code {
    string guess;
    GameState gameState;

    private void OnInitialized()
    {
        gameState = gameEngine.NewGame();
    }

    private void EnterGuess()
    {
        gameState = gameEngine.EnterGuess(guess);

        
    }
}
